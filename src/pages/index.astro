---
import { getCollection } from "astro:content";

// Layout import ‚Äî provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Component Imports
import CallToAction from "../components/CallToAction.astro";
import Grid from "../components/Grid.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Pill from "../components/Pill.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";

// Page section components
import ContactCTA from "../components/ContactCTA.astro";
import Skills from "../components/Skills.astro";

// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<script>
	import ScrollReveal from "scrollreveal";

	const sr = ScrollReveal({
		delay: 500,
		reset: true,
	});

	sr.reveal("#main-content");
	sr.reveal("#skills");
</script>

<BaseLayout>
	<div class="stack gap-20 lg:gap-48">
		<div id="main-content" class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title="Hello üòÉ, mon nom est Noah Razzaq"
					tagline="Je suis d√©veloppeur backend junior."
					align="start"
				>
					<div class="roles">
						<Pill>
							<Icon icon="code" size="1.33em" /> D√©veloppeur
						</Pill>
						<Pill><Icon icon="laptop" size="1.33em" /> Web</Pill>
						<Pill>
							<Icon icon="device-mobile" size="1.33em" /> Mobile
						</Pill>
					</div>
				</Hero>

				<img
					alt="Noah"
					width="480"
					height="620"
					src="/assets/picNoah.jpg"
				/>

				<button type="submit" class="cv-button" onclick="window.open('/assets/CVNoahRazzaq.pdf')">Mon CV</button>
			</header>
		</div>

			<main class="wrapper stack gap-20 lg:gap-48">
				<section id="projets" class="section with-background with-cta">
					<header class="section-header stack gap-2 lg:gap-4">
						<h3>üíª Projets</h3>
					</header>

					<div class="gallery">
						<Grid variant="offset">
							{
								projects.map((project) => (
									<li>
										<PortfolioPreview project={project} />
									</li>
								))
							}
						</Grid>
					</div>

					<div class="cta">
						<CallToAction href="/work/">
							Voir plus
							<Icon icon="arrow-right" size="1.2em" />
						</CallToAction>
					</div>
				</section>

				<div>
					<Skills />
				</div>
			</main>

			<ContactCTA />
		</div>
	</div>

	<style>
		.hero {
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 2rem;
		}

		.roles {
			display: flex;
		}

		.hero img {
			aspect-ratio: 5 / 4;
			object-fit: cover;
			object-position: top;
			border-radius: 1.5rem;
			box-shadow: var(--shadow-md);
		}

		.cv-button {
			background-color: transparent;
			color: purple;
			border: 2px solid purple; /* Ajout de la propri√©t√© border */
			border-radius: 20px; /* Ajout de la propri√©t√© border-radius */
			transition: background-color 0.3s;
			width: 200px;
			height: 50px;
			font-family: var(--font-body);
			font-size: 25px;

		}

		.cv-button:hover {
			background-color: darkviolet;
			color: white;
		}

		@media (min-width: 50em) {
			.hero {
				display: grid;
				grid-template-columns: 6fr 4fr;
				padding-inline: 2.5rem;
				gap: 3.75rem;
			}

			.roles {
				display: flex;
				gap: 0.5rem;
			}

			.hero img {
				aspect-ratio: 3 / 4;
				border-radius: 4.5rem;
				object-fit: cover;
			}
		}

		/* ====================================================== */

		.section {
			display: grid;
			gap: 2rem;
		}

		.with-background {
			position: relative;
		}

		.with-background::before {
			--hero-bg: var(--bg-image-subtle-2);

			content: "";
			position: absolute;
			pointer-events: none;
			left: 50%;
			width: 100vw;
			aspect-ratio: calc(2.25 / var(--bg-scale));
			top: 0;
			transform: translateY(-75%) translateX(-50%);
			background: url("/assets/backgrounds/noise.png") top center/220px
					repeat,
				var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
				var(--gray-999);
			background-blend-mode: overlay, normal, normal, normal;
			mix-blend-mode: var(--bg-blend-mode);
			z-index: -1;
		}

		.with-background.bg-variant::before {
			--hero-bg: var(--bg-image-subtle-1);
		}

		.section-header {
			justify-self: center;
			text-align: center;
			max-width: 50ch;
			font-size: var(--text-md);
			color: var(--gray-300);
		}

		.section-header h3 {
			font-size: var(--text-2xl);
		}

		@media (min-width: 50em) {
			.section {
				grid-template-columns: repeat(4, 1fr);
				grid-template-areas: "header header header header" "gallery gallery gallery gallery";
				gap: 5rem;
			}

			.section.with-cta {
				grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
			}

			.section-header {
				grid-area: header;
				font-size: var(--text-lg);
			}

			.section-header h3 {
				font-size: var(--text-4xl);
			}

			.with-cta .section-header {
				justify-self: flex-start;
				text-align: left;
			}

			.gallery {
				grid-area: gallery;
			}

			.cta {
				grid-area: cta;
			}
		}

		/* ====================================================== */

		.mention-card {
			display: flex;
			height: 7rem;
			justify-content: center;
			align-items: center;
			text-align: center;
			border: 1px solid var(--gray-800);
			border-radius: 1.5rem;
			color: var(--gray-300);
			background: var(--gradient-subtle);
			box-shadow: var(--shadow-sm);
		}

		.heart-square {
			width: 300px;
			height: 300px;
			background-color: #f03a17;
			position: relative;
			transform: rotate(45deg);
		}

		.heart-circle {
			width: 100%;
			height: 100%;
			border-radius: 50%;
			background-color: #f03a17;
			position: absolute;
		}

		.heart-circle:nth-of-type(1) {
			top: -50%;
		}

		.heart-circle:nth-of-type(2) {
			left: -50%;
		}

		@keyframes heartbeat {
			0% {
				transform: translate(-50%, -50%) rotate(-45deg) scale(1);
			}
			50% {
				transform: translate(-50%, -50%) rotate(-45deg) scale(1.2);
			}
			100% {
				transform: translate(-50%, -50%) rotate(-45deg) scale(1);
			}
		}

		.heart-container .heart {
			animation: heartbeat 1s infinite;
		}

		@media (min-width: 50em) {
			.mention-card {
				border-radius: 1.5rem;
				height: 9.5rem;
			}
		}
	</style>
</BaseLayout>

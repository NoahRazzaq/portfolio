---
import { CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import Pill from "../../components/Pill.astro";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

var url = entry.data.video;

function extractYouTubeVideoId(url) {
  const regex = /(?:youtube(?:-nocookie)?\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/|y2u\.be\/)([a-zA-Z0-9_-]{11})/;
  const match = url.match(regex);
  if (match && match[1]) {
    return match[1];
  }
  return null;
}

const videoId = entry.data.video ? extractYouTubeVideoId(entry.data.video) : null;
const embeddedVideoUrl = videoId ? `https://www.youtube.com/embed/${videoId}` : null;
---

<script>
  import ScrollReveal from "scrollreveal";

  const sr = ScrollReveal({
    delay: 500,
    reset: true,
  });

  sr.reveal("#main-content");
  sr.reveal("#skills");
</script>

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div id="main-content" class="stack gap-20">
    <div class="stack gap-15">
      <header>
        <div class="wrapper stack gap-2">
          <a class="back-link" href="/work/"><Icon icon="arrow-left" /> Work</a>
          <Hero title={entry.data.title} align="center">
            <div class="details">
              <div class="tags">
                {
                  entry.data.tags.map((t: unknown) => (
                    <Pill>{t}</Pill>
                  ))
                }
              </div>
              <p class="description">{entry.data.description}</p>
            </div>
          </Hero>
        </div>
      </header>
      <main class="wrapper">
        <div class="stack gap-10 content">
          {
            entry.data.img && (
              <img src={entry.data.img} alt={entry.data.img_alt || ""} />
            )
          }
          <div class="content">
            <Content />
              <div class="video-container">
                <iframe
                  class="video"
                  src={embeddedVideoUrl}
                  title="YouTube video player"
                  frameborder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                ></iframe>              
            </div>
          </div>
        </div>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--gray-800);
  }

  .back-link {
    display: none;
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }

  .description {
    font-size: var(--text-lg);
    max-width: 54ch;
  }

  .video-container {
  position: relative;
  overflow: hidden;
  padding-bottom: 56.25%; /* Ratio 16:9 */
  height: 0;
}

.video-container .video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}


  .content {
    max-width: 65ch;
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {
    border-radius: 1.5rem;
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
  }